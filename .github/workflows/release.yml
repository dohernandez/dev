name: create release

on:
  pull_request:
    types:
      - closed

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19.x

      - name: Get Merged PR Branch
        id: get-branch
        run: |
          PR_BRANCH=$(echo "${{ github.ref }}" | sed 's/refs\/heads\///')
          echo "Merged PR Branch: $PR_BRANCH"
          echo "PR_BRANCH=$PR_BRANCH" >> $GITHUB_ENV

      - name: Determine level
        id: determine-level
        run: |
          case "${{ env.PR_BRANCH }}" in
            patch* | issue* | hotfix* | dependabot/* | whitesource/*)
              LEVEL="patch";;
            minor* | feature* | feat*)
              LEVEL="minor";;
            major* | release*)
              LEVEL="major";;
            *)
              LEVEL="unknown";;
          esac
          echo "Determined level: $LEVEL"
          echo "LEVEL=$LEVEL" >> $GITHUB_ENV

      - name: Get latest tag
        id: latest_tag
        uses: actions-ecosystem/action-get-latest-tag@v1

      - name: Bump release version
        id: bump_version
        run: |
          NEW_VERSION=$(semver bump ${{ steps.latest_tag.outputs.tag }} ${{ env.LEVEL }})
          echo "New version: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          body: |
            This is the release created automatically but always minor.
          tag_name: ${{ env.NEW_VERSION }}
          token: ${{ secrets.PAT }}
